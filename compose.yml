services:
  core-service:
    build:
      context: ./
      dockerfile: ./Dockerfile.core

  math-service:
    build:
      context: ./
      dockerfile: ./Dockerfile.math

  storage-service:
    environment:
      - DB_ADDR=database:5432
      - DB_USER=${DB_USER}
      - DB_PASS=${DB_PASS}
      - DB_NAME=${DB_NAME}
    build:
      context: ./
      dockerfile: ./Dockerfile.storage

  balancer:
    image: nginx:mainline-alpine3.21
    volumes:
      - ./nginx:/etc/nginx/templates
      - ./frontend:/usr/share/nginx/html:ro
    ports:
      - "8080:80"
    depends_on:
      - core-service
      - math-service
      - storage-service

  database:
    image: postgres:17.4-alpine3.21
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASS}
      - POSTGRES_DB=${DB_NAME}
    ports:
      - 127.0.0.1:5432:5432
    volumes:
      - database-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $DB_USER -d $DB_NAME"]
      interval: 3s
      timeout: 3s
      retries: 10
      start_period: 20s

  migrations:
    image: migrate/migrate
    depends_on:
      database:
        condition: service_healthy
    volumes:
      - ./migrations:/migrations
    command:
      [
        "-path",
        "/migrations",
        "-database",
        "postgres://$DB_USER:$DB_PASS@database:5432/$DB_NAME?sslmode=disable",
        "up"
      ]

volumes:
  database-data: